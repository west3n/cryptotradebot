from aiogram import Dispatcher, types
from keyboards import inline
from database.sqlite import create


async def bot_account(msg: types.Message):
    user_id = msg.from_user.id
    await msg.delete()
    user = await create.status(user_id)

    if user[3] is not None:
        days = await create.days_between_dates(user[2], user[3])
        await msg.answer(text=f'–í—Å—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ\n'
                              f'\nüëÅ‚Äçüó® ID: {user_id}'
                              f'\nüëÅ‚Äçüó® –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏: {user[1]} –¥–æ {user[3]} ({days} –¥–Ω–µ–π)'
                              f'\n\nüí∂ –ú–æ–π –∫–æ—à–µ–ª—ë–∫: {user[4]}'
                              f'\nüí∑ –ú–æ–π –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∏–π —Å—á—ë—Ç: '
                              f'\n\nüîé –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–¥–µ–ª–æ–∫:'
                              f'\n‚îú –ö–æ–ª-–≤–æ –∑–∞–∫—Ä—ã—Ç—ã—Ö —Å–¥–µ–ª–æ–∫ (–≤—Å–µ):'
                              f'\n‚îú –ö–æ–ª-–≤–æ –∑–∞–∫—Ä—ã—Ç—ã—Ö —Å–¥–µ–ª–æ–∫ (30 –¥–Ω–µ–π):'
                              f'\n‚îî –ö–æ–ª-–≤–æ –∑–∞–∫—Ä—ã—Ç—ã—Ö —Å–¥–µ–ª–æ–∫ (7 –¥–Ω–µ–π):',
                         reply_markup=inline.subscribe())
    else:
        await msg.answer(text=f'–í—Å—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ\n'
                              f'\nüëÅ‚Äçüó® ID: {user_id}'
                              f'\nüëÅ‚Äçüó® –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏: –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏.',
                         reply_markup=inline.subscribe())


async def bot_help(msg: types.Message):
    await msg.delete()
    await msg.answer(f"–ú—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –ø–æ–º–æ—á—å –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ, –Ω–æ –æ–∂–∏–¥–∞–Ω–∏–µ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è.\n\n"
                     f"–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã: 10:00-00:00 GMT+3.\n\n"
                     f"–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –¥–ª—è –ø–æ–º–æ—â–∏?",
                     reply_markup=inline.help_decision())


async def bot_trading(msg: types.Message):
    await msg.delete()
    await msg.answer("–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é —Ç–æ—Ä–≥–æ–≤–ª–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å",
                     reply_markup=inline.trading_main_menu())


async def bot_partnership_program(msg: types.Message):
    await msg.delete()
    user_id = msg.from_user.id
    await msg.answer(f"ü§ù –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞\n\n"
                     f"ü§ë –°–∫–æ–ª—å–∫–æ –º–æ–∂–Ω–æ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å?\n"
                     f"‚îú  –ó–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ 1 —É—Ä–æ–≤–Ω—è: 12%\n"
                     f"ü•á –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n"
                     f"‚îú  –í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: \n"
                     f"‚îú  –î–æ—Å—Ç—É–ø–Ω–æ –∫ –≤—ã–≤–æ–¥—É: \n"
                     f"‚îî  –ü—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö: \n\n"
                     f"‚§µÔ∏è –í–∞—à–∏ —Å—Å—ã–ª–∫–∏: t.me/cryptotradetemplatebot?start={user_id}",
                     reply_markup=inline.referral_main_menu())


async def bot_orders(msg: types.Message):
    await msg.delete()
    await msg.answer(f"–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤!\n\n"
                     f"–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ API.",
                     reply_markup=inline.connect_api())


async def bot_notification_settings(msg: types.Message):
    await msg.delete()
    await msg.answer("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π", reply_markup=inline.notification_settings())


def register(dp: Dispatcher):
    dp.register_message_handler(bot_account, text='–ê–∫–∫–∞—É–Ω—Ç', state='*')
    dp.register_message_handler(bot_help, text='–ü–æ–º–æ—â—å', state='*')
    dp.register_message_handler(bot_trading, text='–¢–æ—Ä–≥–æ–≤–ª—è', state='*')
    dp.register_message_handler(bot_partnership_program, text='–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞', state='*')
    dp.register_message_handler(bot_orders, text='–û—Ä–¥–µ—Ä–∞', state='*')
    dp.register_message_handler(bot_notification_settings, text='–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π', state='*')
